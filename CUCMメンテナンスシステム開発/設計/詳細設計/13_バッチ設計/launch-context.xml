<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- ジョブの定義 -->
    <batch:job id="csvADExportJob">
        <batch:step id="csvADExportStep">
            <batch:tasklet>
                <!-- 実際のジョブロジックを呼び出すBeanの定義 -->
                <batch:chunk reader="csvReader" writer="csvWriter" commit-interval="100"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <!-- CSVリーダーの定義 -->
    <bean id="csvReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="file:/path/to/organization.csv"/> <!-- 入力ファイルのパスを指定 -->
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="organization_cd,organization_nm,organization_no,organization_abbreviated_nm,print_order,class_sales,class_data_input,update_date"/> <!-- カラム名の設定 -->
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="organizationForm"/> <!-- マッピングするPOJOクラスのBean名を指定 -->
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!-- CSVデータのマッピングクラスの定義 -->
	<!-- ここで、com.example.models.OrganizationFormは実際のプロジェクトのパッケージとクラス名に置き換える必要があります。 -->
    <bean id="organizationForm" class="jp.co.trainocamp.demo.mybatis.model.OrganizationForm">
        <!-- マッピングするフィールドとCSVファイルのカラムの対応を指定 -->
        <property name="organizationCd" value="#{jobParameters['organization_cd']}"/>
        <property name="organizationNm" value="#{jobParameters['organization_nm']}"/>
        <property name="organizationNo" value="#{jobParameters['organization_no']}"/>
        <property name="organizationAbbreviatedNm" value="#{jobParameters['organization_abbreviated_nm']}"/>
        <property name="printOrder" value="#{jobParameters['print_order']}"/>
        <property name="classSales" value="#{jobParameters['class_sales']}"/>
        <property name="classDataInput" value="#{jobParameters['class_data_input']}"/>
        <property name="updateDate" value="#{jobParameters['update_date']}"/>
    </bean>

    <!-- CSVライターの定義 -->
    <bean id="csvWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <property name="resource" value="file:/path/to/output.csv"/> <!-- 出力ファイルのパスを指定 -->
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=","/>
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="organizationCd,organizationNm,organizationNo,organizationAbbreviatedNm,printOrder,classSales,classDataInput,updateDate"/> <!-- 出力するフィールドの順序を指定 -->
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
</beans>
